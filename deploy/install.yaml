
kind: ConfigMap
apiVersion: v1
metadata:
  name: kite-roles
  namespace: default
data:
  roles.yaml: |-
    roles:
      - name: admin
        description: Administrator role with full access
        clusters:
          - '*'
        resources:
          - '*'
        namespaces:
          - '*'
        verbs:
          - '*'
      - name: viewer
        description: Viewer role with read-only access
        clusters:
          - '*'
        resources:
          - '*'
        namespaces:
          - '*'
        verbs:
          - 'get'
    roleMapping:
      - name: admin
        oidcGroups:
          - admins
      - name: admin
        users:
          - 'TODO_UPDATE_ME'
      - name: viewer
        users:
          - 'TODO_UPDATE_ME'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kite
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kite
    namespace: kube-system
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: kite
  namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kite
  name: kite
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kite
  strategy: {}
  template:
    metadata:
      labels:
        app: kite
    spec:
      serviceAccountName: kite
      volumes:
        - name: kite-roles
          configMap:
            name: kite-roles
            defaultMode: 420
      containers:
        - image: ghcr.io/zxh326/kite:latest
          imagePullPolicy: IfNotPresent
          name: kite
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: kite-roles
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: 8080
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kite
  name: kite
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: kite
  type: ClusterIP
